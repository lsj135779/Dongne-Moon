{"version":3,"sources":["actions/index.js","pages/Home.js","components/Header.js","components/Category_Hobby.js","components/Footer.js","pages/Main.js","pages/Signup.js","pages/Signin.js","pages/Mypage.js","components/Loader.js","components/Post.js","pages/List.js","components/PostReply.js","pages/PostRead.js","pages/PostWrite.js","App.js","reducers/initialState.js","reducers/userReducer.js","reducers/postReducer.js","reducers/index.js","store/store.js","index.js","5.svg"],"names":["axios","defaults","withCredentials","SET_USERS","SET_POST","LOGOUT","PATCH_INTRO","PATCH_NICKNAME","PATCH_IMG","setUserInfo","user","type","payload","logout","Home","className","to","style","textDecoration","logoImg","require","default","styled","header","Img","img","props","height","width","Header","reduxState","useSelector","state","userReducer","dispatch","useDispatch","islogin","navigate","useNavigate","src","alt-","onClick","localStorage","removeItem","Category_Hobby","alt","Footer","Main","isLogin","setIsLogin","setUserinfo","categoryHandler","Signup","useState","isOpenPost","setIsOpenPost","email","address","password","passwordCheck","info","setInfo","duplicate","confirmPW","checkInfo","setCheckInfo","handleInputValue","key","e","target","value","isEmile","post","process","then","catch","isPassword","test","display","position","top","padding","autoClose","onComplete","data","fullAddr","extraAddr","addressType","buildingName","bname","onChange","defaultValue","onFocus","console","log","res","Swal","fire","icon","title","showConfirmButton","timer","text","footer","Signin","handleResponseSuccess","loginInfo","setLoginInfo","length","setItem","token","Mypage","edit","setEdit","nickname","intro","id","profile","setProfile","editHandler","undefined","url","method","headers","accesstoken","getItem","patchIntro","err","patchNickname","photoChange","nextSibling","click","classname","encType","onSubmit","preventDefault","formData","FormData","append","childNodes","files","patch","patchImg","name","accept","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","result","isConfirmed","withdraw","LoaderWrap","div","Loader","ref","color","Post","category","contents","split","views","Date","createdAt","toLocaleDateString","List","postContent","setPostContent","loading","setLoading","isData","setIsData","page","setPage","useInView","threshold","inView","keyword","setKeyword","useParams","getItems","useCallback","a","get","setTimeout","useEffect","prevState","clalssName","onKeyUp","slice","reverse","map","index","PostReply","reply","setPostReply","clicked","isClicked","commenterInfo","setCommenterInfo","date","splice","join","delete","comments","role","PostRead","postUser","setPostUser","postReply","setPost","replyWrite","setReplyWrite","contentModify","isContentModify","content","setContent","inputRef","useRef","modifiedPostView","userId","alert","modifiedContent","postId","current","focus","PostWrite","postWrite","setPostWrite","selected","setSelected","options","useMemo","label","defaultMenuIsOpen","App","userinfo","isAuthenticated","api","action","response","path","element","initialState","posts","postReducer","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d06b4af9.chunk.js","sourcesContent":["import axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nexport const SET_USERS = \"SET_USERS\";\nexport const SET_POST = \"SET_POST\";\nexport const LOGOUT = \"LOGOUT\";\nexport const PATCH_INTRO = \"PATCH_INTRO\";\nexport const PATCH_NICKNAME = \"PATCH_NICKNAME\";\nexport const PATCH_IMG = \"PATCH_IMG\";\n\nexport const axiosData = (api, action) => (dispatch) => {\n  return axios(api)\n    .then((res) => {\n\n      dispatch(action(res.data.data));\n    })\n    .catch((err) => console.log(err.response));\n};\n\nexport const setUserInfo = (user) => {\n  return {\n    type: SET_USERS,\n    payload: {\n      user,\n    },\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const setPost = (posts) => {\n  return {\n    type: SET_POST,\n    payload: {\n      posts,\n    },\n  };\n};\n\nexport const patchIntro = (intro) => {\n  return {\n    type: PATCH_INTRO,\n    payload: {\n      intro,\n    },\n  };\n};\n\nexport const patchNickname = (nickname) => {\n  return {\n    type: PATCH_NICKNAME,\n    payload: {\n      nickname,\n    },\n  };\n};\n\nexport const patchImg = (img) => {\n  return {\n    type: PATCH_IMG,\n    payload: {\n      img,\n    },\n  };\n};\n","import React from \"react\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  return (\n    <>\n      <div className=\"background\">\n        <div className=\"slogan\">\n          <div>혼자보다는 함께하는</div>\n          <div>세상을 향한 문을 여세요</div>\n        </div>\n      </div>\n\n      <div className=\"buttonbox\">\n        <Link to={\"/main\"} style={{ textDecoration: \"none\" }}>\n          <div className=\"openbutton\">OPEN THE DOOR</div>\n        </Link>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../actions/index\";\nimport styled from \"styled-components\";\nimport \"./Header.css\";\nimport axios from \"axios\";\nconst logoImg = require(\"./../5.svg\").default;\naxios.defaults.withCredentials = true;\n\n// import \"./Header.css\";\nconst HeadBox = styled.header`\n  height: 60px;\n  width: 100%;\n  border-style: solid;\n  border-width: 2px;\n  position: relative;\n  background-color: #ffdbc1;\n  border-bottom: 1px gray;\n  display: flex;\n  align-items: center;\n`;\nconst Img = styled.img`\n  height: ${(props) => props.height || \"30px\"};\n  width: ${(props) => props.width || \"30px\"};\n`;\n\nexport default function Header({ }) {\n  const reduxState = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n  const { user, islogin } = reduxState;\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    dispatch(logout());\n    localStorage.removeItem(\"accesstoken\");\n    navigate(\"/main\");\n  };\n\n  return (\n    <div className=\"headBox\">\n      <div>\n        <div className=\"header-master\">\n          <div className=\"header-material\"></div>\n          <div className=\"header-material\"></div>\n          <div className=\"header-material\">\n            <Link to=\"/\">\n              <Img src={logoImg} alt-=\"logo\" />\n            </Link>\n          </div>\n          {islogin.islogin ? (\n            <div className=\"header-material\">\n              <Link to=\"/mypage\">\n                {\" \"}\n                <div className=\"logout\">Mypage</div>\n              </Link>\n              <div\n                className=\"logout\"\n                onClick={() => {\n                  handleLogout();\n                }}\n              >\n                Logout\n              </div>\n            </div>\n          ) : (\n            <div className=\"header-material\">\n              <Link to=\"/login\" className=\"login\">\n                Login\n              </Link>\n              <Link to=\"/signup\" className=\"signup\">\n                Signup\n              </Link>\n            </div>\n          )}\n\n          <div className=\"header-material\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Category_Hobby.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Category_Hobby() {\n  return (\n    <div className=\"main\">\n      <div className=\"left-square\">\n        <div className=\"up-left-square\">\n          <Link to={`/post=취미`}>\n            <div className=\"big-square memo\">\n              <div className=\"container\">\n                <div className=\"pic\">\n                  <img\n                    width=\"100px\"\n                    height=\"100px\"\n                    src=\"취미.png\"\n                    alt=\"Mypage\"\n                  />\n                </div>\n                <div className=\"title\">취미</div>\n              </div>\n            </div>\n          </Link>\n        </div>\n        <div className=\"down-left-square\">\n          <Link to={\"/post=맛집\"}>\n            <div className=\"big-square memo\">\n              <div className=\"container\">\n                <div className=\"pic\">\n                  <img width=\"100px\" height=\"100px\" src=\"립.png\" alt=\"Mypage\" />\n                </div>\n                <div className=\"title\">맛집</div>\n              </div>\n            </div>\n          </Link>\n        </div>\n      </div>\n      <div className=\"mid-circle\">\n        <Link to={\"/post=all\"}>\n          <div className=\"mabbe-circle\">\n            <div className=\"circle\">둘러보기</div>\n          </div>\n        </Link>\n      </div>\n      <div className=\"right-square\">\n        <div className=\"up-right-square\">\n          <Link to={\"/post=반려동물\"}>\n            <div className=\"big-square memo\">\n              <div className=\"container\">\n                <div className=\"pic\">\n                  <img\n                    width=\"100px\"\n                    height=\"100px\"\n                    src=\"반려동물.png\"\n                    alt=\"Mypage\"\n                  />\n                </div>\n                <div className=\"title\">반려동물</div>\n              </div>\n            </div>\n          </Link>\n        </div>\n        <div className=\"down-right-square\">\n          <Link to={\"/post=동네소식\"}>\n            <div className=\"big-square memo\">\n              <div className=\"container\">\n                <div className=\"pic\">\n                  <img\n                    width=\"100px\"\n                    height=\"100px\"\n                    src=\"동네소식.png\"\n                    alt=\"Mypage\"\n                  />\n                </div>\n                <div className=\"title\">동네소식</div>\n              </div>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Footer.css\";\n// import styled from \"styled-components\";\n\n// const FooterBox = styled.footer`\n//   height: 60px;\n//   width: 100%;\n//   background-color: #495057;\n//   bottom: 0px;\n//   position: absolute;\n//   div {\n//     text-align: center;\n//     padding-top: 20px;\n//   }\n//   .footer-title {\n//     color: white;\n//   }\n// `;\nexport default function Footer() {\n  return (\n    <footer>\n      <div className=\"footer-wrap\">@Dongne Moon</div>\n    </footer>\n  );\n}\n","import \"./Main.css\";\nimport Header from \"../components/Header\";\nimport Category_Hobby from \"../components/Category_Hobby\";\nimport Footer from \"../components/Footer\";\n\nexport default function Main({\n  isLogin,\n  setIsLogin,\n  setUserinfo,\n  categoryHandler,\n}) {\n  return (\n    <>\n      <Header setUserinfo={setUserinfo} />\n      <Category_Hobby />\n      <Footer />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Signup.css\";\nimport Footer from \"../components/Footer\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\n\nexport default function Signup() {\n  const navigate = useNavigate();\n  const [isOpenPost, setIsOpenPost] = useState(false);\n  const [info, setInfo] = useState({\n    email: \"\",\n    address: \"\",\n    password: \"\",\n    passwordCheck: \"\",\n  });\n  const [checkInfo, setCheckInfo] = useState({\n    email: false,\n    duplicate: false,\n    address: false,\n    password: false,\n    confirmPW: false,\n  });\n\n  const handleInputValue = (key) => (e) => {\n    setInfo({ ...info, [key]: e.target.value });\n\n    if (key === \"email\") {\n      if (isEmile(e.target.value)) {\n        axios\n          .post(`${process.env.REACT_APP_API_URL}/user/email`, {\n            email: e.target.value,\n          })\n          .then(() => {\n            setCheckInfo({ ...checkInfo, duplicate: true, email: true });\n          })\n          .catch(() => {\n            setCheckInfo({ ...checkInfo, email: true, duplicate: false });\n          });\n      } else {\n        setCheckInfo({ ...checkInfo, email: false, duplicate: false });\n      }\n    }\n\n    if (key === \"password\") {\n      if (isPassword(e.target.value)) {\n        setCheckInfo({ ...checkInfo, password: true });\n        if (info.passwordCheck === e.target.value) {\n          setCheckInfo({ ...checkInfo, password: true, confirmPW: true });\n        } else {\n          setCheckInfo({ ...checkInfo, password: true, confirmPW: false });\n        }\n      } else {\n        setCheckInfo({ ...checkInfo, password: false });\n        if (info.passwordCheck !== e.target.value) {\n          setCheckInfo({ ...checkInfo, password: false, confirmPW: false });\n        }\n      }\n    }\n\n    if (key === \"passwordCheck\") {\n      if (info.password === e.target.value) {\n        setCheckInfo({ ...checkInfo, confirmPW: true });\n      } else {\n        setCheckInfo({ ...checkInfo, confirmPW: false });\n      }\n    }\n  };\n\n  // 주소 기능\n  const onCompletePost = (data) => {\n    let fullAddr = data.address;\n    let extraAddr = \"\";\n\n    if (data.addressType === \"R\") {\n      if (data.buildingName !== \"\") {\n        extraAddr +=\n          extraAddr !== \"\" ? `, ${data.buildingName}` : data.buildingName;\n      }\n      if (data.bname !== \"\") {\n        extraAddr += `, ${data.bname}`;\n      }\n      fullAddr += extraAddr !== \"\" ? ` ${extraAddr}` : \"\";\n    }\n    setInfo({ ...info, [\"address\"]: fullAddr });\n    setCheckInfo({ ...checkInfo, address: true });\n    setIsOpenPost(false);\n  };\n\n  const postCodeStyle = {\n    display: \"block\",\n    position: \"relative\",\n    top: \"0%\",\n    width: \"400px\",\n    height: \"400px\",\n    padding: \"7px\",\n  };\n\n  const isEmile = (value) => {\n    let regExp =\n      /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{3,})$/i;\n    return regExp.test(value);\n  };\n  const isPassword = (value) => {\n    let regExp = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,16}$/;\n    return regExp.test(value);\n  };\n\n  const isSignup = () => {\n    console.log(\"checkInfo;;;\", checkInfo);\n    if (\n      checkInfo.email &&\n      checkInfo.duplicate &&\n      checkInfo.password &&\n      checkInfo.confirmPW &&\n      checkInfo.address\n    ) {\n      axios\n        .post(`${process.env.REACT_APP_API_URL}/user/signup`, {\n          email: info.email,\n          address: info.address,\n          password: info.password,\n        })\n        .then((res) => {\n          Swal.fire({\n            icon: \"success\",\n            title: \"가입 완료\",\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          navigate(\"/login\");\n        })\n        .catch(() => {\n          Swal.fire({\n            icon: \"error\",\n            title: \"잘못된정보입니다\",\n            text: \"\",\n            footer: \"\",\n          });\n        });\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"모두 필수입니다...\",\n        text: \"\",\n        footer: \"\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      {isOpenPost ? (\n        <div\n          className=\"modalBackdrop\"\n          onClick={() => {\n            setIsOpenPost(false);\n          }}\n        >\n          <DaumPostcode\n            style={postCodeStyle}\n            autoClose\n            onComplete={onCompletePost}\n          />\n        </div>\n      ) : null}\n      <div className=\"signup-master\">\n        {/* <div className=\"signup-material\"></div> */}\n        <div className=\"signup-material\">\n          <div className=\"logo\">\n            <Link to=\"/main\">\n              <img src=\"5.svg\" alt=\"\" className=\"signuplogo\" />\n            </Link>\n          </div>\n          <div className=\"signup-form\">\n            <div className=\"wrapper\">\n              <div className=\"inputform\">\n                <div className=\"label\">이메일</div>\n                <input\n                  type=\"email\"\n                  className=\"input\"\n                  onChange={handleInputValue(\"email\")}\n                ></input>\n                {checkInfo.email ? (\n                  \"\"\n                ) : (\n                  <div className=\"verify warn\">사용할 수 없는 이메일입니다</div>\n                )}\n                {checkInfo.email === true && checkInfo.duplicate === false ? (\n                  <div className=\"verify warn\">중복된 이메일입니다</div>\n                ) : (\n                  \"\"\n                )}\n                {checkInfo.duplicate ? (\n                  <div className=\"verify pass\">사용 가능한 이메일입니다</div>\n                ) : (\n                  \"\"\n                )}\n\n                <div className=\"label\">주소</div>\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  defaultValue={info.address}\n                  onFocus={() => {\n                    setIsOpenPost(true);\n                  }}\n                ></input>\n                <div className=\"label\">비밀번호</div>\n                <input\n                  type=\"password\"\n                  className=\"input\"\n                  onChange={handleInputValue(\"password\")}\n                ></input>\n                {checkInfo.password ? (\n                  \"\"\n                ) : (\n                  <div className=\"verify warn\">\n                    8 ~ 16자 영문, 숫자 조합 입니다.\n                  </div>\n                )}\n\n                <div className=\"label\">비밀번호 확인</div>\n                <input\n                  type=\"password\"\n                  className=\"input\"\n                  onChange={handleInputValue(\"passwordCheck\")}\n                ></input>\n                {checkInfo.confirmPW ? (\n                  <div className=\"verify pass\">비밀번호가 일치합니다</div>\n                ) : (\n                  <div className=\"verify warn\">\n                    비밀번호가 일치하지 않습니다\n                  </div>\n                )}\n              </div>\n              <div className=\"submitbox\">\n                <div\n                  onClick={() => {\n                    isSignup();\n                  }}\n                  className=\"submitbutton\"\n                >\n                  가입하기\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./Signin.css\";\nimport Footer from \"../components/Footer\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\naxios.defaults.withCredentials = true;\n\nexport default function Signin({ handleResponseSuccess }) {\n  const [loginInfo, setLoginInfo] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const navigate = useNavigate();\n\n  const handleInputValue = (key) => (e) => {\n    setLoginInfo({ ...loginInfo, [key]: e.target.value });\n  };\n\n  const handleLogin = () => {\n    if (loginInfo.email.length === 0 || loginInfo.password.length === 0) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"회원정보를 입력해 주세요\",\n        text: \"\",\n        footer: \"\",\n      });\n    } else {\n      axios\n        .post(`${process.env.REACT_APP_API_URL}/user/signin`, {\n          email: loginInfo.email,\n          password: loginInfo.password,\n        })\n        .then((res) => {\n          localStorage.setItem(\"accesstoken\", res.data.token);\n          handleResponseSuccess();\n          navigate(\"/main\");\n        }).catch(() => {\n          Swal.fire({\n            icon: \"error\",\n            title: \"잘못된 정보입니다\",\n            text: \"\",\n            footer: \"\",\n          });\n        })\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"signin-master\">\n        <div className=\"signin-material\">\n          <div className=\"logo\">\n            <Link to=\"/main\">\n              <img src=\"자산 5.svg\" alt=\"\" className=\"signinlogo\" />\n            </Link>\n          </div>\n          <div className=\"signin-master\">\n            <div className=\"signin-wrap\">\n              <div className=\"signin-form\">\n                <div className=\"email-master\">\n                  <div className=\"label\">이메일</div>\n                  <input\n                    type=\"email\"\n                    className=\"input\"\n                    onChange={handleInputValue(\"email\")}\n                  ></input>\n                </div>\n                <div className=\"pw-master\">\n                  <div className=\"label\">비밀번호</div>\n                  <input\n                    type=\"password\"\n                    className=\"input\"\n                    onChange={handleInputValue(\"password\")}\n                  ></input>\n                </div>\n                <div className=\"submitbox\">\n                  <div className=\"submitbutton\" onClick={handleLogin}>\n                    로그인\n                  </div>\n                  <div className=\"question\">\n                    <Link to=\"/signup\">아직 회원이 아니신가요?</Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout, patchIntro, patchNickname, patchImg } from \"../actions/index\";\nimport \"./Mypage.css\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n\naxios.defaults.withCredentials = true;\n\nexport default function Mypage({ }) {\n  const reduxState = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n  const { user, islogin } = reduxState;\n  const navigate = useNavigate();\n  const [edit, setEdit] = useState(false);\n  const { nickname, email, address, intro, id, img } = user;\n  const [profile, setProfile] = useState({\n    nickname: nickname,\n    img: img,\n    email: email,\n    address: address,\n    intro: intro,\n  });\n\n  const handleInputValue = (key) => (e) => {\n    setProfile({ ...profile, [key]: e.target.value });\n  };\n  const editHandler = () => {\n    if (profile.intro !== undefined) {\n      let url = {\n        method: \"patch\",\n        url: `${process.env.REACT_APP_API_URL}/user/intro/${id}`,\n        headers: {\n          accesstoken: localStorage.getItem(\"accesstoken\"),\n        },\n        data: {\n          intro: profile.intro,\n        },\n      };\n      axios(url)\n        .then((res) => {\n          dispatch(patchIntro(res.data.data.intro));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    if (profile.nickname !== undefined) {\n      let url = {\n        method: \"patch\",\n        url: `${process.env.REACT_APP_API_URL}/user/nickname/${id}`,\n        headers: {\n          accesstoken: localStorage.getItem(\"accesstoken\"),\n        },\n        data: {\n          nickname: profile.nickname,\n        },\n      };\n      axios(url)\n        .then((res) => {\n          dispatch(patchNickname(res.data.data.nickname));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    setEdit(false);\n  };\n\n  const withdraw = () => {\n    let url = {\n      method: \"delete\",\n      url: `${process.env.REACT_APP_API_URL}/user/withdrawal`,\n      headers: {\n        accesstoken: localStorage.getItem(\"accesstoken\"),\n      },\n    };\n    axios(url)\n      // .delete(`${process.env.REACT_APP_API_URL}/user/withdrawal`)\n      .then((res) => {\n        dispatch(logout());\n        //   setUserinfo(null);\n        navigate(\"/main\");\n      });\n  };\n\n  const photoChange = (e) => {\n    console.log(\"사진 제출\");\n    e.target.nextSibling.click();\n  };\n\n  // 제출되었을 때의 로직\n  const PhotoSubmit = (e) => {\n    console.log(\"사진 업로드\");\n    e.preventDefault();\n    // formData로 전송해야 multer가 알아 듣습니다.\n    const formData = new FormData();\n    formData.append(\"file\", e.target.childNodes[1].files[0]);\n\n    axios\n      .patch(`${process.env.REACT_APP_API_URL}/user/img/${id}`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          accesstoken: localStorage.getItem(\"accesstoken\")\n        },\n      })\n      .then((res) => {\n        dispatch(patchImg(res.data.data.img));\n      });\n  };\n\n  let style = { width: \"50px\", height: \"50px\" };\n  return (\n    <>\n      <Header />\n      {edit ? (\n        <div className=\"mypage\">\n          <div className=\"member-master\">\n            <div className=\"member-material\">\n              <div className=\"member-box\">\n                <div className=\"top-master\">\n                  <div className=\"top-name\">\n                    <img className=\"profile\" src={`${img}`} alt=\"\" />\n                    <form\n                      classname=\"img-modify\"\n                      encType=\"multipart/form-data\"\n                      style={{ position: \"relative\" }}\n                      onSubmit={PhotoSubmit}\n                    >\n                      <input\n                        type=\"button\"\n                        value=\"사진수정\"\n                        onClick={photoChange}\n                      ></input>\n                      <input\n                        type=\"file\"\n                        name=\"file\"\n                        id=\"file\"\n                        accept=\"image/*\"\n                        onChange={photoChange}\n                        style={{ display: \"none\" }}\n                      />\n                      <input type=\"submit\" style={{ display: \"none\" }}></input>\n                    </form>\n                  </div>\n                  <div className=\"top-text\">\n                    <input\n                      type=\"text\"\n                      defaultValue={intro}\n                      className=\"text-input-tick\"\n                      onChange={handleInputValue(\"intro\")}\n                    ></input>\n                  </div>\n                </div>\n                <div className=\"nick-master\">\n                  <div className=\"nick-name\">닉네임</div>\n                  <div className=\"nick-text\">\n                    <input\n                      type=\"text\"\n                      defaultValue={nickname}\n                      className=\"text-input\"\n                      onChange={handleInputValue(\"nickname\")}\n                    ></input>\n                  </div>\n                </div>\n                <div className=\"email-master1\">\n                  <div className=\"email-name\">이메일</div>\n                  <div className=\"email-text\">\n                    <div className=\"text-input\">{email}</div>\n                  </div>\n                </div>\n                <div className=\"address-master\">\n                  <div className=\"address-name\">주소</div>\n                  <div className=\"address-text\">\n                    <div className=\"text-input\">{address}</div>\n                  </div>\n                </div>\n                <div className=\"button-master\">\n                  <div className=\"mypagebox\">\n                    <div\n                      className=\"submitbutton\"\n                      onClick={() => {\n                        editHandler();\n                      }}\n                    >\n                      수정\n                    </div>\n                    <div\n                      className=\"submitbutton\"\n                      onClick={() => {\n                        setEdit(false);\n                      }}\n                    >\n                      취소\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"mypage\">\n          <div className=\"member-master\">\n            <div className=\"member-material\">\n              <div className=\"member-box\">\n                <div className=\"top-master\">\n                  <div className=\"top-name\">\n                    <div className=\"profile\">\n                      <img src={`${img}`} style={style} />\n                    </div>\n                  </div>\n                  <div className=\"top-text\">\n\n                    <div className=\"text-input-tick\">\n                      <div className=\"intro-array\">{intro === \"\" ? \"여러분의 일상을 공유해주세요\" : intro}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"nick-master\">\n                  <div className=\"nick-name\">닉네임</div>\n                  <div className=\"nick-text\">\n                    <div className=\"text-input\">{nickname}</div>\n                  </div>\n                </div>\n                <div className=\"email-master1\">\n                  <div className=\"email-name\">이메일</div>\n                  <div className=\"email-text\">\n                    <div className=\"text-input\">{email}</div>\n                  </div>\n                </div>\n                <div className=\"address-master\">\n                  <div className=\"address-name\">주소</div>\n                  <div className=\"address-text\">\n                    <div className=\"text-input\">{address}</div>\n                  </div>\n                </div>\n                <div className=\"button-master\">\n                  <div className=\"mypagebox\">\n                    <div\n                      className=\"submitbutton\"\n                      onClick={() => {\n                        setEdit(true);\n                      }}\n                    >\n                      회원정보 수정\n                    </div>\n                    <div\n                      className=\"submitbutton\"\n                      onClick={() => {\n                        Swal.fire({\n                          title: \"정말 삭제 하겠습니까?\",\n                          icon: \"warning\",\n                          showCancelButton: true,\n                          confirmButtonColor: \"#3085d6\",\n                          cancelButtonColor: \"#d33\",\n                          cancelButtonText: \"취소\",\n                          confirmButtonText: \"삭제\",\n                        }).then((result) => {\n                          if (result.isConfirmed) {\n                            withdraw();\n                            Swal.fire(\"삭제완료!\", \"\");\n                          }\n                        });\n                      }}\n                    >\n                      회원탈퇴\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <Footer />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactLoading from \"react-loading\";\nimport styled from \"styled-components\";\n\nconst LoaderWrap = styled.div`\n  margin-top: 100px;\n  width: 100%;\n  height: 80%;\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n`;\n\nconst Loader = ({ ref }) => {\n  return (\n    <LoaderWrap>\n      <ReactLoading type=\"spin\" color=\"#A593E0\" ref={ref} />\n    </LoaderWrap>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport \"./Post.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Post({ post }) {\n  return (\n    <>\n      <div>\n        <div className=\"feed-master\">\n          <div className=\"feed-wrap\">\n            <Link to={`/post/read=${post.id}`}>\n              <div className=\"feed\">\n                <div className=\"subject-wrap\">\n                  <div className=\"subject\">\n                    <p>{post.category}</p>\n                  </div>\n                </div>\n                <div className=\"content-wrap\">\n                  <div className=\"content\">{post.contents}</div>\n                </div>\n                <div className=\"address-date-wrap\">\n                  <div>{post.user.nickname}</div>\n                  <div className=\"address\">\n                    {post.user.address.split(\",\")[1]}\n                  </div>\n                </div>\n                <div className=\"comment-wrap\">\n                  <div className=\"comment\">{`조회수: ${post.views}`}</div>\n                  <div className=\"date\">\n                    {new Date(post.createdAt).toLocaleDateString(\"ko-kr\")}\n                  </div>\n                </div>\n              </div>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./List.css\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { useInView } from \"react-intersection-observer\";\nimport Loader from \"../components/Loader\";\nimport axios from \"axios\";\nimport Post from \"../components/Post\";\nimport Swal from \"sweetalert2\";\naxios.defaults.withCredentials = true;\n\nexport default function List({ }) {\n  const navigate = useNavigate();\n  const [postContent, setPostContent] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isData, setIsData] = useState(true);\n  const [page, setPage] = useState(1);\n  const [searchPage, setSearchPage] = useState(1);\n  const [ref, inView] = useInView({\n    threshold: 1,\n  });\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [keyword, setKeyword] = useState('');\n  let { category } = useParams();\n\n  const handleSerch = (key) => {\n    if (keyword === \" \" || keyword === \"\") {\n      Swal.fire({\n        icon: \"error\",\n        title: \"동네를 입력해 주세요\",\n        text: \"\",\n        footer: \"\",\n      });\n      return;\n    }\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/post/search?page=${page}`, {\n        keyword: keyword,\n      }).then((res) => {\n        console.log(res.data.data)\n        setKeyword(\"\")\n        setPostContent(res.data.data);\n        setIsData(false)\n      })\n      .catch((err) => setIsData(false));\n\n\n\n  }\n  // useEffect(() => {\n  //   axios\n  //     .get(`${process.env.REACT_APP_API_URL}/post/${category}`)\n  //     .then((res) => {\n  //       setPostContent(res.data.data);\n  //     });\n  // }, [category]);\n\n  const getItems = useCallback(async () => {\n    setLoading(true);\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/post/${category}?page=${page}`)\n      .then((res) => {\n        setPostContent((postContent) => [...postContent, ...res.data.data]);\n      })\n      .catch((err) => setIsData(false));\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, [page, category]);\n\n  useEffect(() => {\n    getItems();\n  }, [getItems]);\n\n  useEffect(() => {\n    if (inView && !loading) {\n      setPage((prevState) => prevState + 1);\n    }\n  }, [inView, loading]);\n\n  return (\n    <>\n      <Header />\n\n      <div>\n        <div clalssName=\"menu-master\">\n          <div className=\"menu-wrap\">\n            <div className=\"menu-box\">\n              <div className=\"menu-material\">\n                <Link to=\"/post=all\" onClick={() => {\n                  setPostContent([]);\n                  setPage(1);\n                }}>\n                  <p className=\"menu-font\">둘러보기</p>\n                </Link>\n              </div>\n              <div className=\"menu-material\">\n                <Link to=\"/post=취미\" onClick={() => {\n                  setPostContent([]);\n                  setPage(1);\n                }}>\n                  <p className=\"menu-font\">취미</p>\n                </Link>\n              </div>\n              <div className=\"menu-material\">\n                <Link to=\"/post=맛집\" onClick={() => {\n                  setPostContent([]);\n                  setPage(1);\n                }}>\n                  <p className=\"menu-font\">맛집</p>\n                </Link>\n              </div>\n              <div className=\"menu-material\">\n                <Link to=\"/post=반려동물\" onClick={() => {\n                  setPostContent([]);\n                  setPage(1);\n                }}>\n                  <p className=\"menu-font\">반려동물</p>\n                </Link>\n              </div>\n              <div className=\"menu-material\">\n                <Link to=\"/post=동네소식\" onClick={() => {\n                  setPostContent([]);\n                  setPage(1);\n                }}>\n                  <p className=\"menu-font\">동네소식</p>\n                </Link>\n              </div>\n              <div className=\"menu-material\">\n                <input\n                  type=\"search\"\n                  className=\"search-input\"\n                  value={keyword}\n                  onChange={(e) => { setKeyword(e.target.value) }}\n                  onKeyUp={(e) => {\n                    if (e.key === \"Enter\") {\n                      handleSerch(e.key)\n                    }\n                  }}\n                ></input>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {postContent.slice(0).reverse().map((post, index) => (\n          <Post key={index} post={post} />\n        ))}\n\n        {isData ? (\n          <div className=\"Target-Element\" inView={inView} ref={ref}>\n            {loading && <Loader ref={ref} />}\n          </div>\n        ) : null}\n\n        <div className=\"write-button\">\n          <Link to=\"/post/write\">\n            <div className=\"write-action\">글 작성</div>\n          </Link>\n        </div>\n      </div>\n\n      {/* <Footer /> */}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./PostReply.css\";\nimport axios from \"axios\";\n\nexport default function PostReply({ reply, user, setPostReply }) {\n  // console.log(reply);\n  const [clicked, isClicked] = useState(true);\n  const [commenterInfo, setCommenterInfo] = useState(null);\n  const header = {\n    accesstoken: localStorage.getItem(\"accesstoken\"),\n  };\n  const style = { width: \"30px\", height: \"30px\" };\n\n  const deleteComment = () => {\n    axios.delete(\n      `${process.env.REACT_APP_API_URL}/comment/delete/${reply.id}`,\n      { headers: header }\n    ).then(res => {\n      setPostReply([...res.data.data.comments]);\n    })\n  };\n  const date = new Date(reply.createdAt)\n    .toLocaleDateString(\"ko-kr\")\n    .split(\"\")\n    .splice(2)\n    .join(\"\");\n  const getCommenterInfo = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/comment/read/${reply.id}/`)\n      .then((res) => {\n        setCommenterInfo(res.data.data);\n        console.log(res.data);\n        isClicked(!clicked);\n      });\n  };\n\n  return (\n    <>\n      {clicked ? (\n        <div className=\"reply-main-wrap\">\n          <div className=\"commenterInfo\" onClick={getCommenterInfo}>\n            <img src={`${reply.user.img}`} style={style} alt=\"\" />\n            <div className=\"reply-user-info\">\n              <div className=\"font-size-large\">{reply.user.nickname}</div>\n              <div className=\"reply-user-address\">\n                <div className=\"reply-user-information\">\n                  {reply.user.address.split(\",\")[1]}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"reply-user-content\">\n            <div className=\"reply-contents\">{reply.contents}</div>\n            <div className=\"reply-user-date\">\n              {date.split(\"\").splice(0, 10).join(\"\")}\n            </div>\n          </div>\n          <div className=\"reply-erase\">\n            {user.id === reply.user.id ? (\n              <div className=\"delete-btn\" onClick={deleteComment}>\n                삭제\n              </div>\n            ) : null}\n          </div>\n        </div>\n      ) : (\n        <div\n          className=\"modal\"\n          onClick={() => isClicked(!clicked)}\n          role=\"dialog\"\n        >\n          <div className=\"commenterInfo-modal\">\n            <img\n              src={commenterInfo.user.img}\n              style={style}\n              alt=\"commenterImg\"\n            ></img>\n            <div className=\"commenterNickname\">\n              {commenterInfo.user.nickname}\n            </div>\n          </div>\n          <div className=\"commenterIntro\">{commenterInfo.user.intro}</div>\n        </div>\n      )}\n    </>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport \"./PostRead.css\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport PostReply from \"../components/PostReply\";\n\n\naxios.defaults.withCredentials = true;\nexport default function PostRead({ }) {\n  const reduxState = useSelector((state) => state.userReducer);\n  const { user, islogin } = reduxState;\n  const navigate = useNavigate();\n  let { id } = useParams();\n  const [postUser, setPostUser] = useState({});\n  const [postReply, setPostReply] = useState([]);\n  const [post, setPost] = useState({});\n  const [replyWrite, setReplyWrite] = useState({\n    reply: \"\",\n  });\n  const [contentModify, isContentModify] = useState(true);\n  const [content, setContent] = useState('');\n  const inputRef = useRef(null);\n\n  const handleInputValue = (key) => (e) => {\n    setReplyWrite({ ...replyWrite, [key]: e.target.value });\n    // console.log(replyWrite);\n  };\n\n  const header = {\n    accesstoken: localStorage.getItem(\"accesstoken\"),\n  };\n\n  const modifiedContent = (e) => {\n    setContent(e.target.value);\n  }\n\n  const postContentModify = () => {\n    axios.patch(`${process.env.REACT_APP_API_URL} / post / update / ${id}`,\n      {\n        contents: content,\n      },\n      {\n        headers: header\n      })\n      .then(res => {\n        setPost(res.data.data);\n        isContentModify(true);\n      })\n  }\n\n  const handleDelete = () => {\n    axios\n      .delete(`${process.env.REACT_APP_API_URL} / post / delete /${id}`, {\n        headers: header,\n      })\n      .then((res) => {\n        console.log(res.data);\n        alert(\"글 삭제 완료\");\n        navigate(\"/post=all\");\n      });\n  };\n\n  const createReply = (e) => {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/comment/create`,\n        {\n          userId: user.id,\n          contents: replyWrite.reply,\n          postId: post.id,\n        },\n        { headers: header }\n      )\n      .then((res) => {\n        setPostReply([...postReply, res.data.data]);\n        inputRef.current.focus();\n        inputRef.current.value = \"\";\n      });\n  };\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/post/read/${id}`).then((res) => {\n      setPostUser(res.data.data.postUser.user);\n      setPost(res.data.data.postUser);\n      setPostReply(res.data.data.modifiedPostView.comments);\n      setContent(res.data.data.postUser.contents);\n    });\n  }, [id]);\n  const style = { width: \"32px\", height: \"32px\" };\n\n\n  return (\n    <>\n      <Header />\n      <div>\n        <div className=\"read-box-master\">\n          <div className=\"read-box-wrap\">\n            <div className=\"read-box\">\n              <div className=\"post-master\">\n                <div className=\"post-wrap\">\n                  <div className=\"post\">\n                    <div className=\"info\">\n                      <div className=\"user-profile\">\n                        <img src={`${postUser.img}`} style={style} />\n                      </div>\n                      <div className=\"user-info-wrap\">\n                        <div className=\"user-nickName\">{postUser.nickname}</div>\n                        <div className=\"reply-user-info-wrap\">\n                          {postUser.address === undefined ? null : (\n                            <div>{postUser.address.split(\",\")[1]}</div>\n                          )}\n                          <div className=\"views-date-wrap\">\n                            <div className=\"reply-user-views\">\n                              조회수 {post.views}\n                              <div>\n                                작성일{\" \"}\n                                {new Date(post.createdAt).toLocaleDateString(\n                                  \"ko-kr\"\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {contentModify ?\n                      <div className=\"post-main\">\n                        <div className=\"post-main-content\">\n                          <p className=\"contentdetails\">{post.contents}</p>\n                        </div>\n                        <div className=\"post-erase-wrap\">\n                          <div className=\"write-action\" onClick={() => {\n                            if (user.id === post.userId) isContentModify(false)\n                          }}>글 수정</div>\n                        </div>\n                        <div className=\"post-erase-wrap\">\n                          <div className=\"write-action\" onClick={() => {\n                            if (user.id === post.userId) handleDelete()\n                          }}>글 삭제</div>\n                        </div>\n                      </div>\n                      :\n                      <div className=\"post-main\">\n                        <div className=\"post-main-content\">\n                          <textarea className=\"modifiedContent\" value={content} onChange={(e => modifiedContent(e))} />\n                        </div>\n                        <div className=\"post-erase-wrap\">\n                          <div className=\"write-action\" onClick={() => postContentModify()}>수정 완료</div>\n                        </div>\n                      </div>\n                    }\n                  </div>\n                </div>\n              </div>\n              <div className=\"reply-master\">\n                {/* <div className=\"reply-wrap\"> */}\n                <p className=\"reply-name\">\n                  <span>댓글</span>\n                  <span className=\"reply-count\">{postReply.length}</span>\n                </p>\n                {/* </div> */}\n                <div className=\"reply\">\n                  {postReply.map((reply, index) => (\n                    <PostReply user={user} key={index} reply={reply} setPostReply={setPostReply} />\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"reply-input-master\">\n                <div className=\"reply-input-wrap\">\n                  <div className=\"reply-input\">\n                    <div className=\"reply-content\">\n                      <input\n                        ref={inputRef}\n                        value={\"\"}\n                        className=\"reply-write\"\n                        onChange={handleInputValue(\"reply\")}\n                      ></input>\n                    </div>\n                    <div\n                      className=\"reply-button\"\n                      onClick={(e) => {\n                        createReply(e);\n                      }}\n                    >\n                      댓글 달기\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport \"./PostWrite.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Select from \"react-select\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout, patchIntro, patchNickname, patchImg } from \"../actions/index\";\nconst logoImg = require(\"./../5.svg\").default;\n\nexport default function PostWrite() {\n\n  // const logopic = require('자산테스트.svg')\n  const reduxState = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n  const { user, islogin } = reduxState;\n  const navigate = useNavigate();\n  const [postWrite, setPostWrite] = useState({\n    contents: \"\",\n  });\n  const [selected, setSelected] = useState(\"\");\n\n  const handleInputValue = (key) => (e) => {\n    setPostWrite({ ...postWrite, [key]: e.target.value });\n  };\n\n  const header = {\n    accesstoken: localStorage.getItem(\"accesstoken\"),\n  };\n  const createPost = () => {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/post/create`,\n        {\n          userId: user.id,\n          category: selected.value,\n          contents: postWrite.contents,\n        },\n        { headers: header }\n      )\n      .then((res) => {\n        Swal.fire({\n          icon: \"success\",\n          title: \"글 작성 완료!\",\n          showConfirmButton: false,\n          timer: 1500,\n        });\n        navigate(`/post=${selected.value}`);\n      });\n  };\n\n  const options = useMemo(\n    () => [\n      { value: \"취미\", label: \"취미\" },\n      { value: \"맛집\", label: \"맛집\" },\n      { value: \"반려동물\", label: \"반려동물\" },\n      { value: \"동네소식\", label: \"동네소식\" },\n    ],\n    []\n  );\n  const handleChange = (selected) => {\n    setSelected(selected);\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"postwrite-master\">\n        <div className=\"postwrite-material\">\n          <div className=\"logo\">\n            <Link to=\"/main\">\n              <img src={logoImg} className=\"logo\" />\n            </Link>\n          </div>\n          <div className=\"postwrite-master\">\n            <div className=\"postwrite-wrap\">\n              <div className=\"postwrite-form\">\n                <div className=\"email-master\">\n                  <div className=\"writelabel\">\n                    <div className=\"subject-select\">\n                      <div className=\"category\">\n                        무엇을 공유하고 싶으신가요?\n                      </div>\n                      <Select\n                        options={options}\n                        value={selected}\n                        onChange={handleChange}\n                        defaultMenuIsOpen\n                      />\n                    </div>\n                  </div>\n                  <textarea\n                    className=\"wrtieinput\"\n                    onChange={handleInputValue(\"contents\")}\n                  ></textarea>\n                </div>\n\n                <div className=\"submitbox\">\n                  <div\n                    className=\"submitbutton\"\n                    onClick={() => {\n                      createPost();\n                    }}\n                  >\n                    글 작성\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n","import \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { axiosData, setUserInfo } from \"./actions/index\";\nimport Home from \"./pages/Home\";\nimport Main from \"./pages/Main\";\nimport Signup from \"./pages/Signup\";\nimport Signin from \"./pages/Signin\";\nimport Mypage from \"./pages/Mypage\";\nimport List from \"./pages/List\";\nimport PostRead from \"./pages/PostRead\";\nimport PostWrite from \"./pages/PostWrite\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [userinfo, setUserinfo] = useState(\"\");\n\n  const isAuthenticated = () => {\n    if (localStorage.getItem(\"accesstoken\")) {\n      let url = {\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}/user/info`,\n        headers: {\n          accesstoken: localStorage.getItem(\"accesstoken\"),\n        },\n      };\n      dispatch(axiosData(url, setUserInfo));\n    }\n  };\n  const handleResponseSuccess = () => {\n    isAuthenticated();\n  };\n  useEffect(() => {\n    isAuthenticated();\n  }, []);\n\n  // const postHandler = () => {\n  //   axios.get(`${process.env.REACT_APP_API_URL}/post`).then((res) => {\n  //     const data = res.data;\n  //     console.log(data);\n  //     setPostContent(data);\n  //   });\n  // };\n\n  // const categoryHandler = () => {\n  //   axios.get(`${process.env.REACT_APP_API_URL}/${}`).then((res) => {\n  //     console.log(res.data);\n  //   });\n  // };\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n\n        <Route path=\"/main\" element={<Main setUserinfo={setUserinfo} />} />\n\n        <Route path=\"/signup\" element={<Signup />} />\n        <Route\n          path=\"/login\"\n          element={<Signin handleResponseSuccess={handleResponseSuccess} />}\n        />\n        <Route\n          path=\"/mypage\"\n          element={<Mypage userinfo={userinfo} setUserinfo={setUserinfo} />}\n        />\n\n        <Route\n          path=\"/post=:category\"\n          element={<List setUserinfo={setUserinfo} />}\n        />\n        <Route\n          path=\"/post/read=:id\"\n          element={<PostRead userinfo={userinfo} setUserinfo={setUserinfo} />}\n        />\n        <Route path=\"/post/write\" element={<PostWrite />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","export const initialState = {\n  posts: [],\n  user: [],\n  islogin: { islogin: false },\n};\n","import {\n  SET_USERS,\n  LOGOUT,\n  PATCH_INTRO,\n  PATCH_NICKNAME,\n  PATCH_IMG,\n} from \"../actions/index\";\nimport { initialState } from \"./initialState\";\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERS:\n      return {\n        ...state,\n        user: action.payload.user,\n        islogin: { islogin: true },\n      };\n\n    case LOGOUT:\n      return { ...state, islogin: { islogin: false } };\n\n    case PATCH_INTRO:\n      return { ...state, user: { ...state.user, intro: action.payload.intro } };\n\n    case PATCH_NICKNAME:\n      return {\n        ...state,\n        user: { ...state.user, nickname: action.payload.nickname },\n      };\n\n    case PATCH_IMG:\n      console.log(\"###########img;;;\", state);\n      return { ...state, user: { ...state.user, img: action.payload.img } };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { SET_POST } from \"../actions/index\";\nimport { initialState } from \"./initialState\";\n\nconst postReducer = (state = initialState, action) => {\n  // console.log(\"1111111111111111\", action.payload);\n  switch (action.type) {\n    case SET_POST:\n      // console.log(\"2222222222222\", action.payload);\n      return { ...state, posts: action.payload.posts };\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer\";\nimport postReducer from \"./postReducer\";\n\nconst rootReducer = combineReducers({\n  postReducer,\n  userReducer,\n});\n\nexport default rootReducer;\n","import { compose, createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n  : compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\nrequire(\"dotenv\").config();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export default __webpack_public_path__ + \"static/media/5.3aca9126.svg\";"],"sourceRoot":""}